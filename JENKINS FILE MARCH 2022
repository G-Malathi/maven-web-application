def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node{
    
    echo "job Nameis: ${env.JOB_NAME}"
    echo "Node name is: ${env.NODE_NAME}"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '1', daysToKeepStr: '', numToKeepStr: '1')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    
    //Get the code from GitHub Repo
     def mavenHome = tool name: 'maven3.8.4'
     stage('CheckoutCode'){
     git branch: 'development', credentialsId: 'd02b8059-b705-4da9-b3f9-414b65b2db86', url: 'https://github.com/G-Malathi/maven-web-application.git'   
    
    }
    // Do the build by using Maven Build Tool
    stage('Build'){
        sh "${mavenHome}/bin/mvn clean package"
        
    }
    /*
    //execute the SonarQube Report
    stage('ExecuteSonarQubeReport'){
        sh "${mavenHome}/bin/mvn sonar:sonar"
    }
    
    //Upload Artifacts into Artfactory Repo
    stage('UploadArtifactsintoNexus'){
        sh "${mavenHome}/bin/mvn deploy"
    }
    //Deploy Application into Tomcat Server
    stage('DeployApplicationIntoTomcatServer'){
        sshagent(['6124963a-f050-4c4e-97b8-aea33aabe034']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.233.155.233:/opt/apache-tomcat-9.0.62/webapps/"
}
}
*/    
}//Try closingcatch(e){
currentBuild.result= "FAILED"
}
finally{
sendSlackNotifications(currentBuild.result)
}
}//node closing


